2016-05-24: Version 0.1.16 released

    Deprecated auto_ptr<> replaced with home-made workalike.

    Added documentation to clarify that BoolExpr<T>::getDisjunctiveNormalForm()
    and boolstuff_get_disjunctive_normal_form() transform the tree they
    receive, so that the pointer to that tree must not be destroyed.

    Added a few test cases.

    Added a C example program: examples/c-example.c

2014-03-01: Version 0.1.15 released

    Fixed bug with some expressions whose raw DNF can contain terms
    of the form a&a.
    Fixed bug with negation of a DNF composed only of useless terms,
    like (a&!a|a&!a).
    configure.ac now uses AC_CONFIG_SRCDIR.
    INSTALL and TODO not installed with documentation anymore.

2013-03-04: Version 0.1.14 released

    Fixed bug where some expressions containing large negations would fail
    an assert statement instead of returning the expected null expression.
    Fixed bug where some duplicate terms would not be detected because
    their factors needed to be sorted and simplified themselves to allow
    that detection.
    Fixed g++ 4.7.2 compilation errors (re: swap() function).

2010-02-14: Version 0.1.13 released

    Terms of DNF now sorted to eliminate duplicates.
    Fixed g++ 4.4.0 compilation errors.

2008-10-13: Version 0.1.12 released

    Fixed memory leaks.
    Fixed wrong result for "a&!a".
    BoolExprParser::Error::STRING_EXPECTED enumerated name renamed to
    IDENTIFIER_EXPECTED.
    Compilation fixes for gcc 4.3.
    AM_PROG_CC_C_O now used in configure.ac to avoid this warning:
        compiling `checkc.c' with per-target flags requires
        `AM_PROG_CC_C_O' in `configure.ac'

2007-04-29: Version 0.1.11 released

    Example programs are not installed anymore.

2006-02-04: Version 0.1.10 released

    DNF algorithm now detects cases where resulting expression tree
    would be too large (maximum number of tree nodes set to 10000).
    booldnf command now returns EXIT_FAILURE if one of the
    requested conversions fail.

2005-05-08: Version 0.1.9 released

    Fixed bug with input expression "!(!(a&m))".
    Removed support for quoted variable names in expression parser,
    to avoid having the BoolExpr<T> template depend on T being std::string.
    Fixes for problems when compiling with g++ 3.4.
    Documentation updated slightly and converted to Doxygen format.

2003-03-18: Version 0.1.8 released

    New booldnf command that converts expressions to the DNF.
    New Perl example in the `examples' subdirectory that uses this
    command with a bidirectional pipe.

2003-03-11: Version 0.1.7 released

    Method BoolExpr<T>::getTreeVariables() now wrapped in the C API
    by function boolstuff_get_tree_variables() and its companion
    boolstuff_free_variables_sets().  The checkc.c testing program
    has been updated accordingly.  It also builds a more complex
    expression to illustrate this addition.

2002-12-13: Version 0.1.6 released

    isDNFTermUseful() deleted.  The DNF is now automatically simplified
    to eliminate useless (always false) terms.  Some cases were deleted
    from test-cases.txt (e.g., a&!a) because they were returned as
    false statements.

    Better example program in the examples subdirectory.

2002-12-12: Version 0.1.5 released

    Fixes for g++ 3.2 compilation problems related to the C++
    std namespace.

2002-12-12: Version 0.1.4 released

    New methods to get the roots of the trees of the DNF terms
    and to determine if some DNF terms are useless (always false).
    New public methods to change the properties of an existing node.
    RPM .spec.in file fixed to disable dependency tracking, which allows
    compilation with g++ 2.95.3.
    Documentation slightly improved.

2002-11-12: Version 0.1.3 released

    Better way of linking the C test program with BoolStuff and libstdc++.
    Also, -lstdc++ not needed for g++ 3.0 after all...
    See <src/boolstuff/Makefile.am>.

2002-11-08: Version 0.1.2 released

    Linking problem solved for g++ 3.0.

2002-11-07: Version 0.1.1 released

    Compilation problems fixed for g++ 3.2.

2002-11-06: Version 0.1.0 released

    First public release.
    Versions 0.1.x will have an unstable API.
    Versions 1.0.x will have a stable API.

